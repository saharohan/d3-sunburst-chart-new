{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Rohan Saha\\\\Desktop\\\\9iu4b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rohan Saha\\\\Desktop\\\\9iu4b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rohan Saha\\\\Desktop\\\\9iu4b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rohan Saha\\\\Desktop\\\\9iu4b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rohan Saha\\\\Desktop\\\\9iu4b\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rohan Saha\\\\Desktop\\\\9iu4b\\\\src\\\\Sunburst.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shallowEqual from \"shallowequal\";\nimport { hsl as d3Hsl } from \"d3-color\";\nimport { select as d3Select, event as d3Event } from \"d3-selection\";\nimport { scaleLinear as d3ScaleLinear, scaleSqrt as d3ScaleSqrt } from \"d3-scale\";\nimport { hierarchy as d3Hierarchy, partition as d3Partition } from \"d3-hierarchy\";\nimport { arc as d3Arc } from \"d3-shape\";\nimport { path as d3Path } from \"d3-path\";\nimport { interpolate as d3Interpolate } from \"d3-interpolate\"; // We have to import this event though we dont use it\n\nimport { transition as d3Transition } from \"d3-transition\";\n/* REFS\n * zoomable /w/ labels -- https://bl.ocks.org/vasturiano/12da9071095fbd4df434e60d52d2d58d\n * text opacity -- https://gist.github.com/metmajer/5480307\n */\n\n/**\n* Creates a zoomable Sunburst\n* @param {object} props\n* @param {object} props.data - see the d3 {@link https://github.com/defunctzombie/d3-examples/blob/master/dendrogram/flare.json|flare.json}\n    data for the shape that is required. \n* @param {string} props.width - width of svg\n* @param {string} props.height - height of svg. \n*   If width and height are not the same there will be dead space.\n* @param {number} props.count_member - what data element to use for slice size\n* @param {number} [props.radianCutoff=.01] - smallest slice to show in radians\n* @param {number} [props.transitionDuration=500] - ms for animation\n* @param {number} [props.saturation=.5] - base color saturation of slices\n* @param {number} [props.lightness=.5] - base color lightness of slices\n* @param {number} [props.child_brightness=.5] - value to lighten children slices\n* @param {number} [props.font_size=12] - for calculating if text fits\n* @param {func} [props.colorFunc=(node, current_color) => current_color]\n        - Custom color func for slices with heights > 0.\n* @param {func} [props.labelFunc] - returns text to slice\n* @param {func} [props.condensedLabelFunc] - backup function to try to fit less text\n        for smaller slices.\n* @param {func} [props.tooltipFunc=(data) => data.name]\n* @param {number} [props.tooltipX=20] - x pointer offset to show tooltip \n* @param {number} [props.tooltipY=20] - y pionter offset to show tooltip\n* @param {string} [props.domID] - will be random if undefined\n* @param {func} [props.onMouseover]\n* @param {func} [props.onMouseout]\n* @param {func} [props.onClick]\n* @param {string} [props.key_member] - data member to construct dom ids from\n*/\n//FIXME normalize function signatures\n//FIXME normalize case\n\nvar Sunburst = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sunburst, _React$Component);\n\n  function Sunburst(props) {\n    var _this;\n\n    _classCallCheck(this, Sunburst);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sunburst).call(this, props));\n    _this._last_click = null;\n    _this.radius = Math.min(_this.props.width, _this.props.height) / 2;\n    _this.y = d3ScaleSqrt().range([0, _this.radius]);\n    _this.x = d3ScaleLinear().range([0, 2 * Math.PI]);\n    _this.arc = d3Arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, _this.x(d.x0)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, _this.x(d.x1)));\n    }).innerRadius(function (d) {\n      return Math.max(0, _this.y(d.y0));\n    }).outerRadius(function (d) {\n      return Math.max(0, _this.y(d.y1));\n    });\n    _this.partition = d3Partition();\n    _this.hueDXScale = d3ScaleLinear().domain([0, 1]).range([0, 360]);\n    _this.domId = _this.props.domId || \"sunburst-wrapper-\" + Math.round(Math.random() * 1e12).toString();\n    _this.svg = null;\n    _this.tooltipDom = null;\n    _this.lastSelect = null;\n    return _this;\n  }\n\n  _createClass(Sunburst, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props._debug && this.props._log(\"Sunburst: componentDidMount()\");\n\n      this._create();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      this.props._debug && this.props._log(\"Sunburst: shouldComponentUpdate()\", this.props);\n\n      if (!shallowEqual(this.props, nextProps)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_destroy_svg\",\n    value: function _destroy_svg() {\n      this.props._debug && this.props._log(\"Sunburst: _destroy_svg()\");\n      this.svg && this.svg.selectAll(\"*\").remove();\n      this.svg = null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      //prevProps\n      this.props._debug && this.props._log(\"Sunburst: componentDidUpdate()\");\n\n      this._destroy_svg();\n\n      this._create();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props._debug && this.props._log(\"Sunburst: componentWillUnmount()\");\n\n      this._destroy_svg();\n    }\n    /**\n     * Programatically select a slice.\n     * @param id the slice key to select. This should be the key_member set in\n     * props.\n     */\n\n  }, {\n    key: \"select\",\n    value: function select(id) {\n      this.props._debug && this.props._log(\"Sunburst: select(id)\");\n      var key = \"#mainArc-\" + id;\n      var nodes = d3Select(key).nodes();\n\n      if (!nodes.length) {\n        this.props._warn(\"could not find node with id of \".concat(key));\n\n        return;\n      }\n\n      var node = nodes[0].__data__;\n\n      this._update(node);\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(node) {\n      this.props._debug && this.props._log(\"Sunburst: _onClick(node)\");\n      this._last_click = node;\n    }\n    /**\n     * recomputes slice colors. If the color function changes this should be called\n     * to update to the new color sheme.\n     */\n\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      var _this2 = this;\n\n      this.props._debug && this.props._log(\"Sunburst: updateColor()\");\n      this.svg.selectAll(\"path.sunburst-main-arc\").style(\"fill\", function (d) {\n        return d.parent ? _this2._colorize(d) : \"white\";\n      });\n    }\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var _this3 = this;\n\n      this.props._debug && this.props._log(\"Sunburst: _create()\");\n      if (!this.props.data) return;\n      var root = d3Hierarchy(this.props.data).sum(function (d) {\n        if (d[this.props.count_member] === undefined) this.props._warn(\"props.count_member (\".concat(this.props.count_member, \") is not defined on data\"));\n        return !d.children || d.children.length === 0 ? d[this.props.count_member] : 0;\n      }.bind(this)); //.filter( (d) => d.depth < 4)\n\n      var data = this.partition(root).descendants().filter(function (d) {\n        return d.x1 - d.x0 > _this3.props.radianCutoff;\n      }); // 0.005 radians = 0.29 degrees\n\n      if (!this.svg) {\n        var w = this.props.width;\n        var h = this.props.height;\n        var el = d3Select(\"#\" + this.domId);\n        this.svg = el.append(\"svg\");\n        this.svg.style(\"class\", \"sunburst-svg\").style(\"width\", w + \"px\").style(\"height\", h + \"px\").attr(\"viewBox\", \"\".concat(-w / 2, \" \").concat(-h / 2, \" \").concat(w, \" \").concat(h)); //this.canvas = this.svg.append('g');\n        //this.svg = d3Select(\"svg\").append(\"g\").attr(\"id\", \"bigG\")\n\n        var gSlices = this.svg.selectAll(\"g\").data(data).enter().append(\"g\");\n        gSlices.exit().remove();\n        var key = this.props.key_member;\n        gSlices.append(\"path\").attr(\"class\", function (d) {\n          var cursor = !d.parent || !d.children ? \" cursor-pointer\" : \" cursor-pointer\";\n          var evenodd = d.depth % 2 ? \"even-row\" : \"odd-row\";\n          return \"sunburst-main-arc\".concat(cursor, \" \").concat(evenodd);\n        }).attr(\"id\", function (d, i) {\n          return key ? \"mainArc-\".concat(d.data[key]) : \"mainArc-\".concat(i);\n        }).style(\"fill\", function (d) {\n          return d.parent ? _this3._colorize(d) : \"white\";\n        }).on(\"click\", function (node) {\n          this._onClick(node);\n\n          this.props.onClick && this.props.onClick(node);\n\n          this._update(node);\n        }.bind(this));\n\n        if (this.props.labelFunc) {\n          gSlices.append(\"path\").attr(\"class\", \"sunburst-hidden-arc\").attr(\"id\", function (_, i) {\n            return \"hiddenArc\".concat(i);\n          }).attr(\"d\", this._middleArcLine.bind(this)).style(\"fill\", \"none\");\n          var text = gSlices.append(\"text\").style(\"pointer-events\", \"none\").style(\"dominant-baseline\", \"middle\").style(\"text-anchor\", \"middle\"); //.attr('display', d => this._textFits(d) ? null : 'none')\n\n          text.append(\"textPath\").attr(\"startOffset\", \"50%\").attr(\"xlink:href\", function (_, i) {\n            return \"#hiddenArc\".concat(i);\n          }).text(function (d) {\n            return _this3._getLabelText(d) || \"\";\n          });\n        }\n      }\n\n      this.props.tooltip && this._setTooltips();\n\n      this._update(root);\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(d, i, a) {\n      var _this4 = this;\n\n      this.props._debug && this.props._log(\"Sunburst: _update(d, i, a)\");\n      if (this.lastSelect && a && this.lastSelect == a[i].id) return;\n      this.lastSelect = a && a[i].id;\n      this.svg.transition().selectAll(\"textPath\").attr(\"opacity\", 0);\n      var transition = this.svg.transition().duration(this.props.transitionDuration) // duration of transition\n      .tween(\"scale\", function () {\n        var xd = d3Interpolate(this.x.domain(), [d.x0, d.x1]),\n            yd = d3Interpolate(this.y.domain(), [d.y0, 1]),\n            yr = d3Interpolate(this.y.range(), [d.y0 ? 20 : 0, this.radius]);\n        return function (t) {\n          this.x.domain(xd(t));\n          this.y.domain(yd(t)).range(yr(t));\n        }.bind(this);\n      }.bind(this));\n      transition.selectAll(\"path.sunburst-hidden-arc\").attrTween(\"d\", function (d) {\n        return function () {\n          return _this4._middleArcLine(d);\n        };\n      }); //.style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n\n      transition.selectAll(\"path.sunburst-main-arc\").attrTween(\"d\", function (d) {\n        return function () {\n          var arc = _this4.arc(d);\n\n          return arc;\n        };\n      }).on(\"end\", function (e, i, a) {\n        if (!_this4.arc.innerRadius()(e)) // if its not visible\n          return; // get a selection of the associated text element\n\n        var arcText = d3Select(a[i].parentNode).select(\"text textPath\"); // fade in the text element and recalculate positions\n\n        arcText.transition(_this4.props.transitionDuration / 2).attr(\"opacity\", 1).text(function (d) {\n          var text = _this4._getLabelText(d);\n\n          return text;\n        });\n      });\n    }\n  }, {\n    key: \"_textFits\",\n    value: function _textFits(d, label) {\n      this.props._debug && this.props._log(\"Sunburst: _textFits(d, label)\");\n      if (!label) return false; // changed to degress\n\n      var angle = (this.arc.endAngle()(d) - this.arc.startAngle()(d)) * 57.296;\n      var radius = this.arc.outerRadius()(d);\n      var arclength = 2 * Math.PI * radius * (angle / 360);\n      return label.length * this.props.font_size < arclength;\n    }\n  }, {\n    key: \"_getLabelText\",\n    value: function _getLabelText(d) {\n      this.props._debug && this.props._log(\"Sunburst: _getLabelText(d)\");\n      var label;\n      label = this.props.labelFunc && this.props.labelFunc(d);\n      if (this._textFits(d, label)) return label;\n      label = this.props.condensedLabelFunc && this.props.condensedLabelFunc(d);\n      if (this._textFits(d, label)) return label;\n      return null;\n    }\n  }, {\n    key: \"_middleArcLine\",\n    value: function _middleArcLine(d) {\n      this.props._debug && this.props._log(\"Sunburst: _middleArcLine(d)\");\n      var halfPi = Math.PI / 2;\n      var angles = [this.x(d.x0) - halfPi, this.x(d.x1) - halfPi];\n      var r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n      var middleAngle = (angles[1] + angles[0]) / 2;\n      var invertDirection = middleAngle > 0 && middleAngle < Math.PI; // On lower quadrants write text ccw\n\n      if (invertDirection) {\n        angles.reverse();\n      }\n\n      var path = d3Path();\n      path.arc(0, 0, r, angles[0], angles[1], invertDirection);\n      return path.toString();\n    }\n  }, {\n    key: \"_inDomain\",\n    value: function _inDomain(d) {\n      this.props._debug && this.props._log(\"Sunburst: _inDomain(d)\");\n      var d0 = this.x.domain()[0];\n      var d1 = this.x.domain()[1];\n      if (d.x0 < d0) return false;\n      if (d.x1 > d1) return false;\n      return true;\n    }\n  }, {\n    key: \"_setTooltips\",\n    value: function _setTooltips() {\n      this.props._debug && this.props._.log(\"Sunburst: _setTooltips(d)\");\n      this.tooltipDom = d3Select(\"#\".concat(this.domId)).append(\"div\").attr(\"class\", \"sunburst-tooltip\").style(\"position\", \"absolute\").style(\"z-index\", \"10\").style(\"opacity\", \"0\").style(\"text-align\", \"center\").style(\"border-radius\", \"8px\") //.style('max-width', '20em')\n      .style(\"pointer-events\", \"none\").style(\"background\", \"lightsteelblue\").style(\"padding\", \"3px\");\n      var dx = this.props.tooltipX;\n      var dy = this.props.tooltipY;\n      this.svg.selectAll(\"path.sunburst-main-arc\").on(\"mouseover\", function (d) {\n        if (this.props.tooltip) {\n          this.tooltipDom.html(this.props.tooltipFunc(d.data)).style(\"left\", d3Event.pageX + dx + \"px\").style(\"top\", d3Event.pageY + dy + \"px\");\n          this.tooltipDom.transition().style(\"opacity\", 0.9).duration(200);\n          this.props.onMouseover && this.props.onMouseover(d.data);\n        }\n      }.bind(this)).on(\"mouseout\", function (d) {\n        this.props.tooltip && this.tooltipDom.transition().style(\"opacity\", 0).duration(500);\n        this.props.onMouseout && this.props.onMouseout(d.data);\n      }.bind(this));\n    }\n  }, {\n    key: \"_colorize\",\n    value: function _colorize(d) {\n      this.props._debug && this.props._log(\"Sunburst: _colorize(d)\");\n      var hue;\n      var current = d;\n\n      if (current.depth === 0) {\n        return \"#33cccc\";\n      }\n\n      var _this$props = this.props,\n          lightness = _this$props.lightness,\n          saturation = _this$props.saturation,\n          child_brightness = _this$props.child_brightness;\n\n      if (current.depth <= 1) {\n        hue = this.hueDXScale(d.x0);\n        current.fill = d3Hsl(hue, saturation, lightness);\n        return current.fill;\n      }\n\n      current.fill = current.parent.fill.brighter(child_brightness);\n      var thishsl = d3Hsl(current.fill);\n      hue = this.hueDXScale(current.x0);\n      var colorshift = thishsl.h + hue / 4;\n      var c = d3Hsl(colorshift, thishsl.s, thishsl.l);\n      return this.props.colorFunc && this.props.colorFunc(d, c) || c;\n    } // we have to render first then componentMounted will give us\n    // access to the dom\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.props._debug && this.props._log(\"Sunburst: render()\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sunburst-wrapper\",\n        id: this.domId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Sunburst;\n}(React.Component);\n\nSunburst.propTypes = {\n  data: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  count_member: PropTypes.string.isRequired,\n  // requried /w/ default\n  tooltip: PropTypes.bool.isRequired,\n  // FIXME get rid of this\n  radianCutoff: PropTypes.number.isRequired,\n  // smallest slice to show in radians\n  transitionDuration: PropTypes.number.isRequired,\n  // ms for animation\n  saturation: PropTypes.number.isRequired,\n  // base saturation of arcs\n  lightness: PropTypes.number.isRequired,\n  // base lightness of parent arcs\n  child_brightness: PropTypes.number.isRequired,\n  // value to lighten children\n  font_size: PropTypes.number.isRequired,\n  // for calculating if text fits\n  colorFunc: PropTypes.func,\n  // custom colorizing for slice\n  tooltipFunc: PropTypes.func,\n  tooltipX: PropTypes.number.isRequired,\n  // offset x to place tooltip\n  tooltipY: PropTypes.number.isRequired,\n  // ofset y to place tooltip\n  domId: PropTypes.string,\n  // will be random if undefined\n  onMouseover: PropTypes.func,\n  onMouseout: PropTypes.func,\n  onClick: PropTypes.func,\n  labelFunc: PropTypes.func,\n  // returns text for slice\n  condensedLabelFunc: PropTypes.func,\n  // backup function to try to fit text\n  key_member: PropTypes.string,\n  // unique id\n  _debug: PropTypes.bool,\n  _log: PropTypes.func,\n  _warn: PropTypes.func\n};\nSunburst.defaultProps = {\n  tooltip: true,\n  tooltipFunc: function tooltipFunc(data) {\n    return data.name;\n  },\n  radianCutoff: 0.001,\n  transitionDuration: 500,\n  colorFunc: function colorFunc(node, current_color) {\n    return current_color;\n  },\n  key_member: \"key\",\n  font_size: 12,\n  tooltipX: 20,\n  tooltipY: 20,\n  saturation: 0.5,\n  lightness: 0.5,\n  child_brightness: 0.5,\n  _debug: false,\n  _log: console.log,\n  _warn: console.warn\n};\nexport default Sunburst;","map":{"version":3,"sources":["C:/Users/Rohan Saha/Desktop/9iu4b/src/Sunburst.js"],"names":["React","PropTypes","shallowEqual","hsl","d3Hsl","select","d3Select","event","d3Event","scaleLinear","d3ScaleLinear","scaleSqrt","d3ScaleSqrt","hierarchy","d3Hierarchy","partition","d3Partition","arc","d3Arc","path","d3Path","interpolate","d3Interpolate","transition","d3Transition","Sunburst","props","_last_click","radius","Math","min","width","height","y","range","x","PI","startAngle","d","max","x0","endAngle","x1","innerRadius","y0","outerRadius","y1","hueDXScale","domain","domId","round","random","toString","svg","tooltipDom","lastSelect","_debug","_log","_create","nextProps","selectAll","remove","_destroy_svg","id","key","nodes","length","_warn","node","__data__","_update","style","parent","_colorize","data","root","sum","count_member","undefined","children","bind","descendants","filter","radianCutoff","w","h","el","append","attr","gSlices","enter","exit","key_member","cursor","evenodd","depth","i","on","_onClick","onClick","labelFunc","_","_middleArcLine","text","_getLabelText","tooltip","_setTooltips","a","duration","transitionDuration","tween","xd","yd","yr","t","attrTween","e","arcText","parentNode","label","angle","arclength","font_size","_textFits","condensedLabelFunc","halfPi","angles","r","middleAngle","invertDirection","reverse","d0","d1","log","dx","tooltipX","dy","tooltipY","html","tooltipFunc","pageX","pageY","onMouseover","onMouseout","hue","current","lightness","saturation","child_brightness","fill","brighter","thishsl","colorshift","c","s","l","colorFunc","Component","propTypes","object","isRequired","string","bool","number","func","defaultProps","name","current_color","console","warn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shallowEqual from \"shallowequal\";\n\nimport { hsl as d3Hsl } from \"d3-color\";\nimport { select as d3Select, event as d3Event } from \"d3-selection\";\nimport {\n  scaleLinear as d3ScaleLinear,\n  scaleSqrt as d3ScaleSqrt\n} from \"d3-scale\";\nimport {\n  hierarchy as d3Hierarchy,\n  partition as d3Partition\n} from \"d3-hierarchy\";\nimport { arc as d3Arc } from \"d3-shape\";\nimport { path as d3Path } from \"d3-path\";\nimport { interpolate as d3Interpolate } from \"d3-interpolate\";\n\n// We have to import this event though we dont use it\nimport { transition as d3Transition } from \"d3-transition\";\n\n/* REFS\n * zoomable /w/ labels -- https://bl.ocks.org/vasturiano/12da9071095fbd4df434e60d52d2d58d\n * text opacity -- https://gist.github.com/metmajer/5480307\n */\n\n/**\n* Creates a zoomable Sunburst\n* @param {object} props\n* @param {object} props.data - see the d3 {@link https://github.com/defunctzombie/d3-examples/blob/master/dendrogram/flare.json|flare.json}\n    data for the shape that is required. \n* @param {string} props.width - width of svg\n* @param {string} props.height - height of svg. \n*   If width and height are not the same there will be dead space.\n* @param {number} props.count_member - what data element to use for slice size\n* @param {number} [props.radianCutoff=.01] - smallest slice to show in radians\n* @param {number} [props.transitionDuration=500] - ms for animation\n* @param {number} [props.saturation=.5] - base color saturation of slices\n* @param {number} [props.lightness=.5] - base color lightness of slices\n* @param {number} [props.child_brightness=.5] - value to lighten children slices\n* @param {number} [props.font_size=12] - for calculating if text fits\n* @param {func} [props.colorFunc=(node, current_color) => current_color]\n        - Custom color func for slices with heights > 0.\n* @param {func} [props.labelFunc] - returns text to slice\n* @param {func} [props.condensedLabelFunc] - backup function to try to fit less text\n        for smaller slices.\n* @param {func} [props.tooltipFunc=(data) => data.name]\n* @param {number} [props.tooltipX=20] - x pointer offset to show tooltip \n* @param {number} [props.tooltipY=20] - y pionter offset to show tooltip\n* @param {string} [props.domID] - will be random if undefined\n* @param {func} [props.onMouseover]\n* @param {func} [props.onMouseout]\n* @param {func} [props.onClick]\n* @param {string} [props.key_member] - data member to construct dom ids from\n*/\n//FIXME normalize function signatures\n//FIXME normalize case\nclass Sunburst extends React.Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n    count_member: PropTypes.string.isRequired,\n\n    // requried /w/ default\n    tooltip: PropTypes.bool.isRequired, // FIXME get rid of this\n    radianCutoff: PropTypes.number.isRequired, // smallest slice to show in radians\n    transitionDuration: PropTypes.number.isRequired, // ms for animation\n    saturation: PropTypes.number.isRequired, // base saturation of arcs\n    lightness: PropTypes.number.isRequired, // base lightness of parent arcs\n    child_brightness: PropTypes.number.isRequired, // value to lighten children\n    font_size: PropTypes.number.isRequired, // for calculating if text fits\n\n    colorFunc: PropTypes.func, // custom colorizing for slice\n    tooltipFunc: PropTypes.func,\n    tooltipX: PropTypes.number.isRequired, // offset x to place tooltip\n    tooltipY: PropTypes.number.isRequired, // ofset y to place tooltip\n\n    domId: PropTypes.string, // will be random if undefined\n    onMouseover: PropTypes.func,\n    onMouseout: PropTypes.func,\n    onClick: PropTypes.func,\n    labelFunc: PropTypes.func, // returns text for slice\n    condensedLabelFunc: PropTypes.func, // backup function to try to fit text\n    key_member: PropTypes.string, // unique id\n    _debug: PropTypes.bool,\n    _log: PropTypes.func,\n    _warn: PropTypes.func\n  };\n\n  static defaultProps = {\n    tooltip: true,\n    tooltipFunc: data => data.name,\n    radianCutoff: 0.001,\n    transitionDuration: 500,\n    colorFunc: (node, current_color) => current_color,\n    key_member: \"key\",\n    font_size: 12,\n    tooltipX: 20,\n    tooltipY: 20,\n    saturation: 0.5,\n    lightness: 0.5,\n    child_brightness: 0.5,\n    _debug: false,\n    _log: console.log,\n    _warn: console.warn\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._last_click = null;\n    this.radius = Math.min(this.props.width, this.props.height) / 2;\n    this.y = d3ScaleSqrt().range([0, this.radius]);\n\n    this.x = d3ScaleLinear().range([0, 2 * Math.PI]);\n\n    this.arc = d3Arc()\n      .startAngle(d => {\n        return Math.max(0, Math.min(2 * Math.PI, this.x(d.x0)));\n      })\n      .endAngle(d => {\n        return Math.max(0, Math.min(2 * Math.PI, this.x(d.x1)));\n      })\n      .innerRadius(d => {\n        return Math.max(0, this.y(d.y0));\n      })\n      .outerRadius(d => {\n        return Math.max(0, this.y(d.y1));\n      });\n\n    this.partition = d3Partition();\n\n    this.hueDXScale = d3ScaleLinear()\n      .domain([0, 1])\n      .range([0, 360]);\n\n    this.domId =\n      this.props.domId ||\n      \"sunburst-wrapper-\" + Math.round(Math.random() * 1e12).toString();\n    this.svg = null;\n    this.tooltipDom = null;\n    this.lastSelect = null;\n  }\n\n  componentDidMount() {\n    this.props._debug && this.props._log(\"Sunburst: componentDidMount()\");\n    this._create();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    this.props._debug &&\n      this.props._log(\"Sunburst: shouldComponentUpdate()\", this.props);\n    if (!shallowEqual(this.props, nextProps)) {\n      return false;\n    }\n    return true;\n  }\n\n  _destroy_svg() {\n    this.props._debug && this.props._log(\"Sunburst: _destroy_svg()\");\n    this.svg && this.svg.selectAll(\"*\").remove();\n    this.svg = null;\n  }\n\n  componentDidUpdate() {\n    //prevProps\n    this.props._debug && this.props._log(\"Sunburst: componentDidUpdate()\");\n    this._destroy_svg();\n    this._create();\n  }\n\n  componentWillUnmount() {\n    this.props._debug && this.props._log(\"Sunburst: componentWillUnmount()\");\n    this._destroy_svg();\n  }\n  /**\n   * Programatically select a slice.\n   * @param id the slice key to select. This should be the key_member set in\n   * props.\n   */\n  select(id) {\n    this.props._debug && this.props._log(\"Sunburst: select(id)\");\n    const key = \"#mainArc-\" + id;\n    const nodes = d3Select(key).nodes();\n    if (!nodes.length) {\n      this.props._warn(`could not find node with id of ${key}`);\n      return;\n    }\n    const node = nodes[0].__data__;\n    this._update(node);\n  }\n\n  _onClick(node) {\n    this.props._debug && this.props._log(\"Sunburst: _onClick(node)\");\n    this._last_click = node;\n  }\n\n  /**\n   * recomputes slice colors. If the color function changes this should be called\n   * to update to the new color sheme.\n   */\n  updateColor() {\n    this.props._debug && this.props._log(\"Sunburst: updateColor()\");\n    this.svg\n      .selectAll(\"path.sunburst-main-arc\")\n      .style(\"fill\", d => (d.parent ? this._colorize(d) : \"white\"));\n  }\n\n  _create() {\n    this.props._debug && this.props._log(\"Sunburst: _create()\");\n    if (!this.props.data) return;\n\n    const root = d3Hierarchy(this.props.data).sum(\n      function(d) {\n        if (d[this.props.count_member] === undefined)\n          this.props._warn(\n            `props.count_member (${\n              this.props.count_member\n            }) is not defined on data`\n          );\n        return !d.children || d.children.length === 0\n          ? d[this.props.count_member]\n          : 0;\n      }.bind(this)\n    );\n    //.filter( (d) => d.depth < 4)\n\n    const data = this.partition(root)\n      .descendants()\n      .filter(d => d.x1 - d.x0 > this.props.radianCutoff); // 0.005 radians = 0.29 degrees\n\n    if (!this.svg) {\n      const w = this.props.width;\n      const h = this.props.height;\n      const el = d3Select(\"#\" + this.domId);\n\n      this.svg = el.append(\"svg\");\n      this.svg\n        .style(\"class\", \"sunburst-svg\")\n        .style(\"width\", w + \"px\")\n        .style(\"height\", h + \"px\")\n        .attr(\"viewBox\", `${-w / 2} ${-h / 2} ${w} ${h}`);\n      //this.canvas = this.svg.append('g');\n      //this.svg = d3Select(\"svg\").append(\"g\").attr(\"id\", \"bigG\")\n\n      var gSlices = this.svg\n        .selectAll(\"g\")\n        .data(data)\n        .enter()\n        .append(\"g\");\n\n      gSlices.exit().remove();\n\n      const key = this.props.key_member;\n      gSlices\n        .append(\"path\")\n        .attr(\"class\", d => {\n          const cursor =\n            !d.parent || !d.children ? \" cursor-pointer\" : \" cursor-pointer\";\n          const evenodd = d.depth % 2 ? \"even-row\" : \"odd-row\";\n          return `sunburst-main-arc${cursor} ${evenodd}`;\n        })\n        .attr(\"id\", (d, i) => {\n          return key ? `mainArc-${d.data[key]}` : `mainArc-${i}`;\n        })\n        .style(\"fill\", d => (d.parent ? this._colorize(d) : \"white\"))\n        .on(\n          \"click\",\n          function(node) {\n            this._onClick(node);\n            this.props.onClick && this.props.onClick(node);\n            this._update(node);\n          }.bind(this)\n        );\n\n      if (this.props.labelFunc) {\n        gSlices\n          .append(\"path\")\n          .attr(\"class\", \"sunburst-hidden-arc\")\n          .attr(\"id\", (_, i) => `hiddenArc${i}`)\n          .attr(\"d\", this._middleArcLine.bind(this))\n          .style(\"fill\", \"none\");\n\n        const text = gSlices\n          .append(\"text\")\n          .style(\"pointer-events\", \"none\")\n          .style(\"dominant-baseline\", \"middle\")\n          .style(\"text-anchor\", \"middle\");\n        //.attr('display', d => this._textFits(d) ? null : 'none')\n\n        text\n          .append(\"textPath\")\n          .attr(\"startOffset\", \"50%\")\n          .attr(\"xlink:href\", (_, i) => `#hiddenArc${i}`)\n          .text(d => this._getLabelText(d) || \"\");\n      }\n    }\n    this.props.tooltip && this._setTooltips();\n    this._update(root);\n  }\n\n  _update(d, i, a) {\n    this.props._debug && this.props._log(\"Sunburst: _update(d, i, a)\");\n\n    if (this.lastSelect && a && this.lastSelect == a[i].id) return;\n\n    this.lastSelect = a && a[i].id;\n\n    this.svg\n      .transition()\n      .selectAll(\"textPath\")\n      .attr(\"opacity\", 0);\n\n    const transition = this.svg\n      .transition()\n      .duration(this.props.transitionDuration) // duration of transition\n      .tween(\n        \"scale\",\n        function() {\n          var xd = d3Interpolate(this.x.domain(), [d.x0, d.x1]),\n            yd = d3Interpolate(this.y.domain(), [d.y0, 1]),\n            yr = d3Interpolate(this.y.range(), [d.y0 ? 20 : 0, this.radius]);\n          return function(t) {\n            this.x.domain(xd(t));\n            this.y.domain(yd(t)).range(yr(t));\n          }.bind(this);\n        }.bind(this)\n      );\n\n    transition\n      .selectAll(\"path.sunburst-hidden-arc\")\n      .attrTween(\"d\", d => () => this._middleArcLine(d));\n\n    //.style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n    transition\n      .selectAll(\"path.sunburst-main-arc\")\n      .attrTween(\"d\", d => () => {\n        const arc = this.arc(d);\n        return arc;\n      })\n      .on(\"end\", (e, i, a) => {\n        if (!this.arc.innerRadius()(e))\n          // if its not visible\n          return;\n        // get a selection of the associated text element\n        var arcText = d3Select(a[i].parentNode).select(\"text textPath\");\n        // fade in the text element and recalculate positions\n        arcText\n          .transition(this.props.transitionDuration / 2)\n          .attr(\"opacity\", 1)\n          .text(d => {\n            const text = this._getLabelText(d);\n            return text;\n          });\n      });\n  }\n\n  _textFits(d, label) {\n    this.props._debug && this.props._log(\"Sunburst: _textFits(d, label)\");\n\n    if (!label) return false;\n    // changed to degress\n    const angle = (this.arc.endAngle()(d) - this.arc.startAngle()(d)) * 57.296;\n    const radius = this.arc.outerRadius()(d);\n    const arclength = 2 * Math.PI * radius * (angle / 360);\n    return label.length * this.props.font_size < arclength;\n  }\n\n  _getLabelText(d) {\n    this.props._debug && this.props._log(\"Sunburst: _getLabelText(d)\");\n    var label;\n    label = this.props.labelFunc && this.props.labelFunc(d);\n    if (this._textFits(d, label)) return label;\n    label = this.props.condensedLabelFunc && this.props.condensedLabelFunc(d);\n    if (this._textFits(d, label)) return label;\n    return null;\n  }\n\n  _middleArcLine(d) {\n    this.props._debug && this.props._log(\"Sunburst: _middleArcLine(d)\");\n    const halfPi = Math.PI / 2;\n    const angles = [this.x(d.x0) - halfPi, this.x(d.x1) - halfPi];\n    const r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n\n    const middleAngle = (angles[1] + angles[0]) / 2;\n    const invertDirection = middleAngle > 0 && middleAngle < Math.PI; // On lower quadrants write text ccw\n    if (invertDirection) {\n      angles.reverse();\n    }\n\n    const path = d3Path();\n    path.arc(0, 0, r, angles[0], angles[1], invertDirection);\n    return path.toString();\n  }\n\n  _inDomain(d) {\n    this.props._debug && this.props._log(\"Sunburst: _inDomain(d)\");\n    const d0 = this.x.domain()[0];\n    const d1 = this.x.domain()[1];\n    if (d.x0 < d0) return false;\n    if (d.x1 > d1) return false;\n    return true;\n  }\n\n  _setTooltips() {\n    this.props._debug && this.props._.log(\"Sunburst: _setTooltips(d)\");\n    this.tooltipDom = d3Select(`#${this.domId}`)\n      .append(\"div\")\n      .attr(\"class\", \"sunburst-tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"z-index\", \"10\")\n      .style(\"opacity\", \"0\")\n      .style(\"text-align\", \"center\")\n      .style(\"border-radius\", \"8px\")\n      //.style('max-width', '20em')\n      .style(\"pointer-events\", \"none\")\n      .style(\"background\", \"lightsteelblue\")\n      .style(\"padding\", \"3px\");\n\n    const dx = this.props.tooltipX;\n    const dy = this.props.tooltipY;\n    this.svg\n      .selectAll(\"path.sunburst-main-arc\")\n      .on(\n        \"mouseover\",\n        function(d) {\n          if (this.props.tooltip) {\n            this.tooltipDom\n              .html(this.props.tooltipFunc(d.data))\n              .style(\"left\", d3Event.pageX + dx + \"px\")\n              .style(\"top\", d3Event.pageY + dy + \"px\");\n            this.tooltipDom\n              .transition()\n              .style(\"opacity\", 0.9)\n              .duration(200);\n\n            this.props.onMouseover && this.props.onMouseover(d.data);\n          }\n        }.bind(this)\n      )\n      .on(\n        \"mouseout\",\n        function(d) {\n          this.props.tooltip &&\n            this.tooltipDom\n              .transition()\n              .style(\"opacity\", 0)\n              .duration(500);\n\n          this.props.onMouseout && this.props.onMouseout(d.data);\n        }.bind(this)\n      );\n  }\n\n  _colorize(d) {\n    this.props._debug && this.props._log(\"Sunburst: _colorize(d)\");\n    let hue;\n    const current = d;\n    if (current.depth === 0) {\n      return \"#33cccc\";\n    }\n    const { lightness, saturation, child_brightness } = this.props;\n    if (current.depth <= 1) {\n      hue = this.hueDXScale(d.x0);\n      current.fill = d3Hsl(hue, saturation, lightness);\n      return current.fill;\n    }\n    current.fill = current.parent.fill.brighter(child_brightness);\n    const thishsl = d3Hsl(current.fill);\n    hue = this.hueDXScale(current.x0);\n    const colorshift = thishsl.h + hue / 4;\n    const c = d3Hsl(colorshift, thishsl.s, thishsl.l);\n    return (this.props.colorFunc && this.props.colorFunc(d, c)) || c;\n  }\n\n  // we have to render first then componentMounted will give us\n  // access to the dom\n  render() {\n    this.props._debug && this.props._log(\"Sunburst: render()\");\n    return <div className=\"sunburst-wrapper\" id={this.domId} />;\n  }\n}\n\nexport default Sunburst;\n"]},"metadata":{},"sourceType":"module"}